# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = individuals-reliefs-api

appUrl = "http://localhost:7796"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "shared.routing.VersionRoutingRequestHandler"

# Json error handler
play.http.errorHandler = "shared.utils.ErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.ReliefsModule"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Api related config
api {
  # The status of the version of the API for the API Platform.
  1.0 {
    status = "BETA"
    endpoints.enabled = true
    endpoints.api-released-in-production = true
  }

  2.0 {
    status = "BETA"
    endpoints.enabled = true
    endpoints.api-released-in-production = true
  }

  confidence-level-check {
      confidence-level = 250
      definition.enabled = true
      auth-validation.enabled = true
    }
  supporting-agent-endpoints {
    create-amend-charitable-giving-reliefs = false
    delete-charitable-giving-reliefs = false
    retrieve-charitable-giving-reliefs = false
    create-amend-pensions-reliefs = false
    delete-pensions-reliefs = false
    retrieve-pensions-reliefs = false
    create-amend-foreign-reliefs = true
    delete-foreign-reliefs = true
    retrieve-foreign-reliefs = true
    amend-other-reliefs = true
    delete-other-reliefs = true
    retrieve-other-reliefs = true
    create-amend-relief-investments = true
    delete-relief-investments = true
    retrieve-relief-investments = true
  }

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "individuals/reliefs"

}

bootstrap.http.headersAllowlist = [ "Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id" ]
internalServiceHostPatterns = [ "localhost" ]

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

auditing {
  enabled = true
}

feature-switch {
  supporting-agents-access-control {
     enabled = true
     released-in-production = false
  }

  des_hip_migration_1656 {
    enabled = true
    release-in-production = false
  }
}

microservice {

  services {

    auth {
      host = localhost
      port = 8500
    }

    mtd-id-lookup {
      host = localhost
      port = 9769
    }

    des {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    ifs {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    hip {
          host = 127.0.0.1
          port = 9772
          env = Prod
          clientId = "someClientId"
          clientSecret = "someClientSecret"
          environmentHeaders = ["Accept", "Gov-Test-Scenario", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
        }
  }
}

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors { allowedOrigins = ["http://localhost:9680"] }
